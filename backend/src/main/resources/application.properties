spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}

#Use this specific JDBC driver class to connect to the database
#org.postgresql.Driver is the Java class that knows how to talk to a PostgreSQL database using JDBC
#It comes from the postgresql dependency in your pom.xml
#You usually need this only if Spring Boot can’t auto-detect the driver
#what is a driver: A driver is like a translator between your Java code and a database
spring.datasource.driver-class-name=org.postgresql.Driver

#This config is related to JPA / Hibernate, which is an ORM (Object Relational Mapping) tool that maps Java objects to database tables
#Even though you're using JDBC and not JPA, Spring Boot still loads some JPA settings unless you disable them
#It controls how Hibernate manages your database schema when the app starts up
#none -> Does nothing (recommended if using JDBC manually)
#update -> Updates DB schema to match your Java entities
#create -> Drops and recreates DB on every startup (⚠️ dangerous)
#validate -> Checks schema vs. entities, throws if mismatched
spring.jpa.hibernate.ddl-auto=none

logging.level.org.springframework.boot.autoconfigure.jdbc=DEBUG
